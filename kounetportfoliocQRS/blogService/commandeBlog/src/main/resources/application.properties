spring.application.name=commandeBlog
server.port=8081
axon.axonserver.servers=http://axonserver:8124
spring.config.import=optional:configserver:http://configservice:9999
cloud.aws.credentials.access-key=gLC3cmonjcfQoIyq5988
cloud.aws.credentials.secret-key=eR6RWTYlBavtKvcIfGSjtCmU6FGUCzjR3hSJQi9Q
cloud.aws.s3.bucket=polyinformatique
cloud.aws.s3.endpoint=https://s3.ca-central-1.idrivee2-64.com
cloud.aws.region.static=Montreal
spring.security.oauth2.resourceserver.jwt.issuer-uri=${JWT_ISSUER_URI:http://localhost:8080/realms/polyinformatiqueEcommerce}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${JWT_JWK_SET_URI:http://localhost:8080/realms/polyinformatiqueEcommerce/protocol/openid-connect/certs}

#
#spring.security.oauth2.client.registration.keycloak.client-name=keycloak
#spring.security.oauth2.client.registration.keycloak.client-id=frontend
#spring.security.oauth2.client.registration.keycloak.client-secret=UaLbhPfQtL4ExUcTAi1gR6szUqa0bzPW
#spring.security.oauth2.client.registration.keycloak.scope=openid,profile,email,offline_access
#spring.security.oauth2.client.registration.keycloak.authorization-grant-type=authorization_code
#spring.security.oauth2.client.registration.keycloak.redirect-uri=http://localhost:8090/login/oauth2/code/sdia-customer-client
#spring.security.oauth2.client.provider.keycloak.issuer-uri=http://localhost:8080/realms/polyinformatiqueEcommerce
#
#spring.security.oauth2.client.provider.keycloak.user-name-attribute=preferred_username
#spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8080/realms/ebank-realm
